(()=>{"use strict";class t{constructor(t){this.data=t}init(){this.bindToDOM()}static template(t){return`\n      <div class="tickets__card" data-id="${t.id}" data-status="${t.status}">\n        <div class="card__content">\n          <div class="checkbox-wrapper">\n            <div class="status__pic hidden"></div>\n          </div>\n          <span class="tickets__short-name">${t.name}</span>\n          <span class="creation__date">${t.created}</span>\n          <div class="button__block">\n            <button class="ticket__edit"></button>\n            <button class="ticket__del"></button>\n          </div>\n        </div>\n        <div class="full__name-wrapper visual-none">\n        <span class="tickets__full-name"></>\n        </div>\n      </div>\n      `}bindToDOM(){const t=document.querySelector(".board"),e=this.addTicket(this.data);t.insertAdjacentHTML("beforeend",e)}addTicket(){if(this.data){return this.constructor.template(this.data)}return!1}}const e=async t=>{const e=`https://alexa1920.herokuapp.com/?${t.query}`,i=await fetch(e,{method:t.method,body:t.data?JSON.stringify(t.data):null});console.log(i,"request");const n=await i.json();return console.log(n,"response"),t.callback&&t.callback(n),n};class i{getStartedList(t){return e({method:"GET",query:"method=getStartedTickets",callback:t})}getAllTickets(t){return e({method:"GET",query:"method=allTickets",callback:t})}createTicket(t,i){return e({method:"POST",query:"method=createTicket",data:t,callback:i})}getIndex(t,i){return e({method:"GET",query:`method=getTicketById&id=${t}`,callback:i})}delete(t,i){return e({method:"GET",query:`method=deleteTicket&id=${t}`,callback:i})}isStatuschecked(t,i){return e({method:"GET",query:`method=toggleStatusTicket&id=${t}`,callback:i})}modification(t,i){return e({method:"POST",query:"method=editTicket",data:t,callback:i})}}class n{constructor(t){this.parentEl=t}static get markup(){return'\n        <div class="modal modal-active">\n        \n            <form class="modal-form-box">\n\t\t\t<div class="modal-content">\n\t\t\t<h3 class="description__title"></h3>\n\n\t\t\t\t<div class="button__block form__button">\n                \t<button class="ticket__add-button">Добавить</button>\n\t\t\t\t\t<button class="modal-close__btn">Отменить</button>\n\t\t\t\t</div>\n\t\t\t\t</div>\n            </form>\n        </div>\n'}static get markInput(){return'\n\t\t<div class="input-wrapper">\n\t\t\t<label for="lfname">Название:</label> \n\t\t\t<input class="input-tooltip input__ticket-name" type="text" placeholder="Краткое описание"/>\t\n\t\t</div>\n    <div class=form-wrapper>\n\t \t<form class="form">\n\t\t\t<label for="lfDescription">Описание:</label> \n\t\t\t<textarea class="form-text" type="text" rows="3" placeholder="Подробное описание"></textarea>\n\t\t</form>\n    </div>\n    '}redrawInput(){document.querySelector(".description__title").insertAdjacentHTML("afterend",this.constructor.markInput)}redrawModalForm(){this.parentEl.insertAdjacentHTML("afterbegin",this.constructor.markup),this.modalWrapperEl.classList.add("modal-active"),this.modalButtonEl.addEventListener("click",(()=>this.closeModalForm()))}showInputValue(t,e){this.modalNameEl.value=t,this.modalPriceEl.value=e}showDescription(t){document.querySelector(".description__title").textContent=t}get modalWrapperEl(){return this.parentEl.querySelector(".modal")}get modalDescription(){return this.parentEl.querySelector(".description__title")}set modalDescription(t){this.parentEl.querySelector(".description__title").textContent=t}get modalButtonEl(){return this.parentEl.querySelector(".modal-close__btn")}closeModalForm(){this.modalWrapperEl.classList.remove("modal-active"),this.parentEl.querySelector(".modal").remove()}}const s=document.getElementById("container"),a=new class{constructor(t){this.container=t}static get markup(){return'\n      <div class="principal__button">\n          <button class="add__button">+</button>\n      </div>\n      <div class="list-wrapper">\n          <h2 class="list__title">HelpDesk</h2>\n          <span class="greeting__title">Ваш список пока Пруст...</span>\n          <div class="board hidden"></board>\n      </div>\n'}bindToDOM(){this.container.insertAdjacentHTML("afterbegin",this.constructor.markup)}}(s);new class{constructor(t){this.listEditor=t,this.api=new i}init(){this.listEditor.bindToDOM(),this.container=document.querySelector("#container"),document.addEventListener("DOMContentLoaded",(()=>{this.api.getAllTickets(this.renderingStartedList.bind(this))})),this.addSubscribe(this.container)}addSubscribe(t){t.addEventListener("click",this.onClickAddCard.bind(this)),t.addEventListener("click",this.onClickOpenForm.bind(this)),t.addEventListener("click",this.completionField.bind(this)),t.addEventListener("input",this.completionField.bind(this)),t.addEventListener("click",this.onClickDeleteCard.bind(this)),t.addEventListener("click",this.onClickRemoveCard.bind(this)),t.addEventListener("click",this.onClickSaveCard.bind(this)),t.addEventListener("click",this.onClickName.bind(this)),t.addEventListener("click",this.onClickCheckedStatus.bind(this))}onClickAddCard(t){if(!t.target.classList.contains("ticket__add-button"))return;t.preventDefault(),this.ticketName=document.querySelector(".input__ticket-name"),this.ticketDescription=document.querySelector(".form-text");if(!this.validityFields(this.ticketName))return;const e={name:this.ticketName.value,description:this.ticketDescription.value};this.api.createTicket(e,(t=>{this.renderingCard(t)})),this.modal.closeModalForm()}onClickCheckedStatus(t){if(t.target.classList.contains("checkbox-wrapper")||t.target.classList.contains("status__pic")){this.parentCard=t.target.closest(".tickets__card");const e={id:this.parentCard.dataset.id};this.api.isStatuschecked(e.id,(t=>{this.isChecked(t,this.parentCard)}))}}onClickName(t){if(t.preventDefault(),!t.target.classList.contains("tickets__short-name"))return;this.parentCard=t.target.closest(".tickets__card");const e={id:this.parentCard.dataset.id};this.api.getIndex(e.id,(t=>{this.showDescription(t,this.parentCard)}))}showDescription(t,e){const i=e.querySelector(".tickets__full-name");if(i)return i.textContent=t.description,void i.parentElement.classList.toggle("visual-none");const n=document.querySelector(".form-text");n&&(n.value=t.description)}isChecked(t,e){const i=e.querySelector(".status__pic");!0===t?(i.classList.remove("hidden"),e.dataset.status=!0):(i.classList.add("hidden"),e.dataset.status=!1)}renderingStartedList(e=[]){e.length&&(e.forEach((e=>{new t(e).init();const i=Array.from(document.querySelectorAll(".tickets__short-name")).find((t=>t.textContent===e.name));this.isChecked(e.status,i.previousElementSibling)})),document.querySelector(".tickets__card")&&(document.querySelector(".board").classList.remove("hidden"),document.querySelector(".greeting__title").classList.add("hidden")))}completionField(t){t.preventDefault(),t.target.classList.contains("form-text")&&(this.newDescription=document.querySelector(".form-text").value),t.target.classList.contains("input-tooltip")&&(this.newName=document.querySelector(".input__ticket-name")),t.target.parentElement.querySelector(".tooltip-active")&&t.target.nextElementSibling.remove(),t.target.parentElement.querySelector(".tooltip-active")&&t.target.nextElementSibling.remove()}validityFields(t){const e=document.createElement("span");if(e.textContent="*Вы пропустили обязательное поле",e.classList.add("tooltip-active"),!t.parentElement.lastElementChild.classList.contains("tooltip-active"))return!t.classList.contains("input__ticket-name")||""!==t.value||(t.insertAdjacentElement("afterend",e),e.tooltipText="Заполните поле",!1)}onClickOpenForm(t){if(t.preventDefault(),t.target.classList.contains("add__button")||t.target.classList.contains("ticket__edit")){if(Array.from(document.querySelectorAll(".full__name-wrapper")).forEach((t=>t.classList.add("visual-none"))),this.modal=new n(this.container),document.querySelector(".modal"))return;this.modal.redrawModalForm(),this.modal.redrawInput()}if(t.target.classList.contains("ticket__edit")){this.onEditValueButton("Сохранить","ticket__save-button"),this.parentCard=t.target.closest(".tickets__card"),this.name=this.parentCard.querySelector(".tickets__short-name"),document.querySelector(".input__ticket-name").value=this.name.textContent;const e={id:this.parentCard.dataset.id};this.api.getIndex(e.id,(t=>{this.showDescription(t,document.querySelector(".form-text"))}))}}onClickSaveCard(t){if(t.preventDefault(),!t.target.classList.contains("ticket__save-button"))return;if(!this.newDescription&&!this.newName)return void this.modal.closeModalForm();if(this.newName){if(!this.validityFields(this.newName))return;this.shortName=this.newName.value}this.newDescription&&!this.newName&&(this.shortName=this.name.textContent);const e=this.name.parentElement.closest(".tickets__card"),i=e.querySelector(".tickets__full-name"),n={id:e.dataset.id,name:this.shortName,description:this.newDescription||document.querySelector(".form-text").value};this.api.modification(n,(t=>{this.savingChanges(this.name,n.name,i,n.description)}))}onClickDeleteCard(t){t.preventDefault(),t.target.classList.contains("ticket__del")&&(Array.from(document.querySelectorAll(".full__name-wrapper")).forEach((t=>t.classList.add("visual-none"))),this.modal=new n(this.container),document.querySelector(".modal")||(this.modal.redrawModalForm(),this.onEditValueButton("Удалить","ticket__remove-button"),this.parentCard=t.target.closest(".tickets__card"),this.modal.showDescription("Удалить задачу  из списка?")))}onClickRemoveCard(t){if(t.preventDefault(),!t.target.classList.contains("ticket__remove-button"))return;const e={id:this.parentCard.dataset.id};this.api.delete(e.id,(t=>{this.removeTicket(this.parentCard)}))}onEditValueButton(t,e){const i=document.querySelector(".ticket__add-button");i.classList.remove("ticket__add-button"),i.classList.add(e),i.textContent=t}renderingCard(e){const i=new t(e);return i.init(),document.querySelector(".tickets__card")&&(document.querySelector(".board").classList.remove("hidden"),document.querySelector(".greeting__title").classList.add("hidden")),i}removeTicket(t){t.remove(),this.modal.closeModalForm(),document.querySelector(".tickets__card")||(document.querySelector(".board").classList.add("hidden"),document.querySelector(".greeting__title").classList.remove("hidden"))}savingChanges(t,e,i,n){t.textContent=e,i.textContentt=n,this.modal.closeModalForm()}}(a).init()})();